//https://practice.geeksforgeeks.org/problems/diameter-of-binary-tree/1/?ref=self
 
/*This is a function problem.You only need to complete the function given below*/
/* Tree node structure  used in the program
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
   
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */
/* Computes the diameter of binary tree with given root.  */
int height(Node* root){
    if(root==NULL) return 0;
    return 1+max(height(root->left),height(root->right));
}
int diameter(Node* node)
{
   
   if(node==NULL) return 0;
   
   int lht=height(node->left);
   int rht=height(node->right);
   
   int ldt=diameter(node->left);
   int rdt=diameter(node->right);
   
   return max(lht+rht+1,max(ldt,rdt));
}
 
 
/*
The diameter of a tree T is the largest of the following quantities:
 
* the diameter of T’s left subtree
* the diameter of T’s right subtree
* the longest path between leaves that goes through the root of T (this can be computed from the heights of the subtrees of T)
*/
